---
- name: Downlaod latest artifact and restart application
  hosts: sit

  tasks:
    - name: Backuping existing files to {{package_dir}}/{{artifactId}}-backup
      command: rsync --remove-source-files --ignore-times --delete --recursive --times {{package_dir}}/{{artifactId}}/ {{package_dir}}/{{artifactId}}-backup/

    - name: Downlaoding the artifact
      get_url:
        force: yes
        url: "{{artifactoryUrl}}/{{artifactPath}}/{{artifactId}}-{{artifactVersion}}.{{packaging}}"
        dest: "{{package_dir}}/{{artifactId}}/{{artifactId}}-{{artifactVersion}}.{{packaging}}"
        validate_certs: no
        mode: 0744
      register: get_url_sleeper
      async: 350 #350 secs- Maximum runtime in Seconds
      poll: 0 #Fire and Forget (never poll}

    - name: Stopping the current instance if any
      shell: "{{root_dir}}/bin/stop-{{artifactId}}.sh"
      args:
        executable: /bin/bash
      register: stop_script_sleeper
      async: 350 #350 secs- Maximum runtime in Seconds
      poll: 0 #Fire and Forget (never poll}

    - name: Checking if stopping the current instance is completed
      async_status:
        jid: "{{stop_script_sleeper}}.ansible_job_id"
      register: stop_instance_job_result
      until: stop_instance_job_result.finished
      delay: 5 #Check every 5 seconds
      retries: 60 #Retry up to 60 times
    - debug: var=stop_instance_job_result.stdout_lines

    - name: Checking if Downloading the artifact is completed
      async_status:
        jid: "{{get_url_sleeper}}.ansible_job_id"
      register: artifact_download_job_result
      until: artifact_download_job_result.finished
      delay: 5 #Check every 5 seconds
      retries: 60 #Retry up to 60 times

    - name: Starting the application instance if no other instance with same profile is running
      shell: "{{root_dir}}/bin/stop-{{artifactId}}.sh"
      register: stop_script_sleeper
      args:
        executable: /bin/bash
    - debug: var=stop_script_sleeper.stdout_lines