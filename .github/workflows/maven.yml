# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ cicd-actions-testing ]
  pull_request:
    branches: [ cicd-actions-testing ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - id: install-secret-key
        name: Install gpg secret key
        run: cat <(echo -e "${{ secrets.VARKEYS_EV_MAVEN_GPG_SECRET_KEY }}") | gpg --batch --import
        env: # Or as an environment variable
          VARKEYS_EV_MAVEN_GPG_SECRET_KEY: ${{ secrets.VARKEYS_EV_MAVEN_GPG_SECRET_KEY }}
      - name: Compile, Test, Verify,Build and Push Docker image, Deploy Azure App with Maven
        run: mvn -s assembly/.m2/settings.xml --no-transfer-progress deploy
        env: # Or as an environment variable
          VARKEYS_DOCKERHUB_DOCKER_ACCESS_TOKEN: ${{ secrets.VARKEYS_DOCKERHUB_DOCKER_ACCESS_TOKEN }}
          VARKEYS_DOCKERHUB_DOCKER_USERNAME: ${{ secrets.VARKEYS_DOCKERHUB_DOCKER_USERNAME }}
          VARKEYS_EV_AZURE_SERVICE_PRINCIPAL_PASSWORD: ${{ secrets.VARKEYS_EV_AZURE_SERVICE_PRINCIPAL_PASSWORD }}
          VARKEYS_EV_AZURE_SERVICE_PRINCIPAL_USERNAME: ${{ secrets.VARKEYS_EV_AZURE_SERVICE_PRINCIPAL_USERNAME }}
          VARKEYS_EV_AZURE_SERVICE_PRINCIPAL_TENANT: ${{ secrets.VARKEYS_EV_AZURE_SERVICE_PRINCIPAL_TENANT }}
          VARKEYS_EV_MAVEN_GPG_PASSPHRASE: ${{ secrets.VARKEYS_EV_MAVEN_GPG_PASSPHRASE }}
          VARKEYS_EV_MAVEN_CENTRAL_JIRA_USERNAME: ${{ secrets.VARKEYS_EV_MAVEN_CENTRAL_JIRA_USERNAME }}
          VARKEYS_EV_MAVEN_CENTRAL_JIRA_PASSWORD: ${{ secrets.VARKEYS_EV_MAVEN_CENTRAL_JIRA_PASSWORD }}
          VARKEYS_SONAR_LOGIN: ${{ secrets.VARKEYS_SONAR_LOGIN }}
          VARKEYS_SONAR_URL: ${{ secrets.VARKEYS_SONAR_URL }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
      - name: Store artifacts of workflow
        uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: target
      - name: API Testing with Postman-Newman Collection
        uses: matt-ball/newman-action@master
        with:
          collection: postman_collection.json
          environment: postman_environment.json